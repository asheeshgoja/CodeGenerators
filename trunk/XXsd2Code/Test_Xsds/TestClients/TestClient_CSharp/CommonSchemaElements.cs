//Auto generated code
//Code generated by XXsd2Code<http://xxsd2code.sourceforge.net/> XXsd2Code.exe version 1.0.0
//For any comments/suggestions contact code generator author at asheesh.goja@gmail.com
//Auto generated code
//Auto generated code
 
using System;
using System.Collections.Generic;
 
 
 
 
namespace XXsd2CodeSample
{
	namespace CommonElements
	{
 
		//enumeration	FuzzyCondition
		public enum	FuzzyCondition
		{
			[System.Xml.Serialization.XmlEnum(Name = "100")] Hot = 100,
			[System.Xml.Serialization.XmlEnum(Name = "200")] VeryHot = 200,
			[System.Xml.Serialization.XmlEnum(Name = "300")] ExtremelyHot = 300,
			[System.Xml.Serialization.XmlEnum(Name = "0")] Cold = 0
			
		}
 
		[Serializable]
		public class	CreditCardDetails : ICloneable
		{
			public	string			CCNumber;
			public	string			ExpirationDate;
			public	FuzzyCondition			Rating;
			
			//default constructor
			public	CreditCardDetails()
			{
				CCNumber = String.Empty;
				ExpirationDate = String.Empty;
				Rating = XXsd2CodeSample.CommonElements.FuzzyCondition.Hot ;
			}
			
			//IClonable Override
			public	virtual	object Clone()
			{
				CreditCardDetails	 instance = new CreditCardDetails() ;
				instance.CCNumber = CCNumber ;
				instance.ExpirationDate = ExpirationDate ;
				instance.Rating = Rating ;
				return instance;
			}
			
			//DeepCopy
			public	void DeepCopy(CreditCardDetails from)
			{
				CCNumber = from.CCNumber ;
				ExpirationDate = from.ExpirationDate ;
				Rating = from.Rating ;
			}
			
		}
 
		[Serializable]
		public class	OrderItem : ICloneable
		{
			public	bool IsBackOrder; 
			public	string			title;
			public	string			note;
			public	int			quantity;
			public	System.Decimal			price;
			
			//default constructor
			public	OrderItem()
			{
				IsBackOrder = false ;
				title = String.Empty;
				note = String.Empty;
				quantity = 0 ;
				price = default(decimal) ;
			}
			
			//IClonable Override
			public	virtual	object Clone()
			{
				OrderItem	 instance = new OrderItem() ;
				instance.IsBackOrder = IsBackOrder ;
				instance.title = title ;
				instance.note = note ;
				instance.quantity = quantity ;
				instance.price = price ;
				return instance;
			}
			
			//DeepCopy
			public	void DeepCopy(OrderItem from)
			{
				IsBackOrder = from.IsBackOrder ;
				title = from.title ;
				note = from.note ;
				quantity = from.quantity ;
				price = from.price ;
			}
			
		}
	}
}


